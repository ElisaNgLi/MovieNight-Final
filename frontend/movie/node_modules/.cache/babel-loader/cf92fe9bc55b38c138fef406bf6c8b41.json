{"ast":null,"code":"var _jsxFileName = \"/Users/elizang/Desktop/movie/final/frontend/movie/src/components/Account/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Title from \"../Style/Title\";\nimport \"./ResetPassword.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = props => {\n  _s();\n\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [validateOldPassword, setValidOldPassword] = useState();\n  const [validateNewPassword, setValidNewPassword] = useState();\n  const [validateConfirmPassword, setValidConfirmPassword] = useState();\n\n  const handleOldPassword = event => {\n    setOldPassword(event.target.value);\n  };\n\n  const handleNewPassword = event => {\n    setNewPassword(event.target.value);\n  };\n\n  const handleConfirmPassword = event => {\n    setConfirmPassword(event.target.value);\n  };\n\n  const handleValidOldPassword = () => {\n    setValidOldPassword(oldPassword.trim().length >= 8 ? true : false);\n  };\n\n  const handleValidNewPassword = () => {\n    setValidNewPassword(newPassword.trim().length >= 8 ? true : false);\n  };\n\n  const handleValidConfirmPassword = () => {\n    setValidConfirmPassword(confirmPassword === newPassword ? true : false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      name: \"My Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"nav nav-tabs card-header-tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              className: \"nav-link\",\n              \"aria-current\": \"true\",\n              to: \"/myaccount\",\n              children: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item active\",\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              className: \"nav-link\",\n              to: \"/resetpassword\",\n              children: \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"row g-3 mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `invalid-field ${validateOldPassword === false ? \"invalid\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"oldPassword\",\n                className: \"form-label\",\n                children: \"Current Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"oldPassword\",\n                value: oldPassword,\n                onChange: handleOldPassword,\n                onBlur: handleValidOldPassword,\n                autoFocus: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), validateOldPassword === false && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Please enter your current password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `invalid-field ${validateNewPassword === false ? \"invalid\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"newPassword\",\n                className: \"form-label\",\n                children: \"New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"newPassword\",\n                className: \"form-control\",\n                value: newPassword,\n                onChange: handleNewPassword,\n                onBlur: handleValidNewPassword,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), validateNewPassword === false && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Password must be at least 8 characters long\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `invalid-field ${validateConfirmPassword === false ? \"invalid\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"confirmPassword\",\n                className: \"form-label\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"confirmPassword\",\n                className: \"form-control\",\n                value: confirmPassword,\n                onChange: handleConfirmPassword,\n                onBlur: handleValidConfirmPassword,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), validateConfirmPassword === false && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Password does not match\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn savepw btn-md\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPassword, \"5drKcrKfu8PPQg/ZPF71Oa6oja4=\");\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/elizang/Desktop/movie/final/frontend/movie/src/components/Account/ResetPassword.js"],"names":["React","useState","NavLink","Title","ResetPassword","props","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","validateOldPassword","setValidOldPassword","validateNewPassword","setValidNewPassword","validateConfirmPassword","setValidConfirmPassword","handleOldPassword","event","target","value","handleNewPassword","handleConfirmPassword","handleValidOldPassword","trim","length","handleValidNewPassword","handleValidConfirmPassword"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Title from \"../Style/Title\";\nimport \"./ResetPassword.css\";\n\nconst ResetPassword = (props) => {\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [validateOldPassword, setValidOldPassword] = useState();\n  const [validateNewPassword, setValidNewPassword] = useState();\n  const [validateConfirmPassword, setValidConfirmPassword] = useState();\n\n  const handleOldPassword = (event) => {\n    setOldPassword(event.target.value);\n  };\n\n  const handleNewPassword = (event) => {\n    setNewPassword(event.target.value);\n  };\n\n  const handleConfirmPassword = (event) => {\n    setConfirmPassword(event.target.value);\n  };\n\n  const handleValidOldPassword = () => {\n    setValidOldPassword(oldPassword.trim().length >= 8 ? true : false);\n  };\n\n  const handleValidNewPassword = () => {\n    setValidNewPassword(newPassword.trim().length >= 8 ? true : false);\n  };\n\n  const handleValidConfirmPassword = () => {\n    setValidConfirmPassword(confirmPassword === newPassword ? true : false);\n  };\n\n  return (\n    <div className=\"container\">\n      <Title name=\"My Account\" />\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <ul className=\"nav nav-tabs card-header-tabs\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" aria-current=\"true\" to=\"/myaccount\">\n                Profile\n              </NavLink>\n            </li>\n            <li className=\"nav-item active\">\n              <NavLink className=\"nav-link\" to=\"/resetpassword\">\n                Reset Password\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n        <div className=\"card-body\">\n          <form className=\"row g-3 mt-3\">\n            <div className=\"form-group\">\n              <div\n                className={`invalid-field ${\n                  validateOldPassword === false ? \"invalid\" : \"\"\n                }`}\n              >\n                <label htmlFor=\"oldPassword\" className=\"form-label\">\n                  Current Password\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"oldPassword\"\n                  value={oldPassword}\n                  onChange={handleOldPassword}\n                  onBlur={handleValidOldPassword}\n                  autoFocus\n                  required\n                />\n                {validateOldPassword === false && (\n                  <p>Please enter your current password</p>\n                )}\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <div\n                className={`invalid-field ${\n                  validateNewPassword === false ? \"invalid\" : \"\"\n                }`}\n              >\n                <label htmlFor=\"newPassword\" className=\"form-label\">\n                  New Password\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"newPassword\"\n                  className=\"form-control\"\n                  value={newPassword}\n                  onChange={handleNewPassword}\n                  onBlur={handleValidNewPassword}\n                  required\n                />\n                {validateNewPassword === false && (\n                  <p>Password must be at least 8 characters long</p>\n                )}\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <div\n                className={`invalid-field ${\n                  validateConfirmPassword === false ? \"invalid\" : \"\"\n                }`}\n              >\n                <label htmlFor=\"confirmPassword\" className=\"form-label\">\n                  Confirm Password\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"confirmPassword\"\n                  className=\"form-control\"\n                  value={confirmPassword}\n                  onChange={handleConfirmPassword}\n                  onBlur={handleValidConfirmPassword}\n                  required\n                />\n                {validateConfirmPassword === false && (\n                  <p>Password does not match</p>\n                )}\n              </div>\n            </div>\n            <div className=\"text-center\">\n              <button type=\"button\" className=\"btn savepw btn-md\">\n                Save\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}