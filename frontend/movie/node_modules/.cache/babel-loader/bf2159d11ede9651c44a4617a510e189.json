{"ast":null,"code":"var _jsxFileName = \"/Users/elizang/Desktop/movie/final/frontend/movie/src/components/Home/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Slider from \"./Slider\";\nimport FeatureMovie from \"./FeatureMovie\";\nimport FeatureTv from \"./FeatureTv\";\nimport ContentActor from \"./ContentActor\";\nimport ContentMovie from \"./ContentMovie\";\nimport SearchResult from \"./SearchResult\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const [allData, setAllData] = useState([]);\n  const [filterData, setFilterData] = useState(allData);\n  const [search, setSearch] = useState(false);\n  useEffect(() => {\n    const url = [{\n      url: \"https://night-movie.herokuapp.com/tv\"\n    }, {\n      url: \"https://night-movie.herokuapp.com/movies\"\n    }];\n\n    const fetchStuff = async () => {\n      const results = await Promise.all(url.map(type => fetch(type.url)));\n      const results2 = await Promise.all(results.map(res => res.json()));\n      const movies = [results2[0].body];\n      const tv = [results2[1].body];\n      const combine = movies.concat(tv);\n      setAllData(combine);\n      setFilterData(combine);\n    };\n\n    fetchStuff();\n  }, []);\n\n  const handleSearch = e => {\n    e.preventDefault();\n    let value = e.target.value.toLowerCase();\n    let result = [];\n    let all = allData[0].concat(allData[1]);\n    result = all.filter(data => {\n      return data.title.toLowerCase().search(value) !== -1;\n    });\n    setFilterData(result);\n    setSearch(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-flex my-5\",\n      onSubmit: handleSearch,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control me-2\",\n        type: \"search\",\n        placeholder: \"Search\",\n        \"aria-label\": \"Search\",\n        onChange: event => handleSearch(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), search && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filterData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col my-2\",\n            children: /*#__PURE__*/_jsxDEV(SearchResult, {\n              title: data.title,\n              poster_path: data.poster_path,\n              id: data.id,\n              type: data.type\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this)\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), !search && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Slider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FeatureMovie, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContentActor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FeatureTv, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContentMovie, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"ccYLSuQdSOT59X+IU9/DVVq2kzw=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/elizang/Desktop/movie/final/frontend/movie/src/components/Home/HomePage.js"],"names":["React","useState","useEffect","Slider","FeatureMovie","FeatureTv","ContentActor","ContentMovie","SearchResult","HomePage","allData","setAllData","filterData","setFilterData","search","setSearch","url","fetchStuff","results","Promise","all","map","type","fetch","results2","res","json","movies","body","tv","combine","concat","handleSearch","e","preventDefault","value","target","toLowerCase","result","filter","data","title","event","index","poster_path","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Slider from \"./Slider\";\nimport FeatureMovie from \"./FeatureMovie\";\nimport FeatureTv from \"./FeatureTv\";\nimport ContentActor from \"./ContentActor\";\nimport ContentMovie from \"./ContentMovie\";\nimport SearchResult from \"./SearchResult\";\n\nconst HomePage = () => {\n  const [allData, setAllData] = useState([]);\n  const [filterData, setFilterData] = useState(allData);\n  const [search, setSearch] = useState(false);\n\n  useEffect(() => {\n    const url = [\n      { url: \"https://night-movie.herokuapp.com/tv\" },\n      { url: \"https://night-movie.herokuapp.com/movies\" },\n    ];\n    const fetchStuff = async () => {\n      const results = await Promise.all(url.map((type) => fetch(type.url)));\n      const results2 = await Promise.all(results.map((res) => res.json()));\n      const movies = [results2[0].body];\n      const tv = [results2[1].body];\n      const combine = movies.concat(tv);\n      setAllData(combine);\n      setFilterData(combine);\n    };\n    fetchStuff();\n  }, []);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    let value = e.target.value.toLowerCase();\n    let result = [];\n    let all = allData[0].concat(allData[1]);\n    result = all.filter((data) => {\n      return data.title.toLowerCase().search(value) !== -1;\n    });\n    setFilterData(result);\n    setSearch(true);\n  };\n\n  return (\n    <div className=\"container\">\n      <form className=\"d-flex my-5\" onSubmit={handleSearch}>\n        <input\n          className=\"form-control me-2\"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          onChange={(event) => handleSearch(event)}\n        />\n      </form>\n      {search && (\n        <div>\n          {filterData.map((data, index) => (\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col my-2\" key={data.id}>\n                  <SearchResult\n                    key={index}\n                    title={data.title}\n                    poster_path={data.poster_path}\n                    id={data.id}\n                    type={data.type}\n                  />\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n      {!search && (\n        <div>\n          <Slider />\n          <FeatureMovie />\n          <ContentActor />\n          <FeatureTv />\n          <ContentMovie />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}